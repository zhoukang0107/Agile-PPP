客户需求：
1、有些雇员是钟点工。会按照他们雇员记录中每小时报酬字段的值对他们进行支付，他们每天会提交工作时间卡，其中记录了日期以及工作小时数。如果他们每天工作超过8小时，那么超过部分会按照正常报酬的1.5倍进行支付，每周五对他们进行支付。
2、有些会员会以月薪进行支付。每个月的最后一个工作日对他们进行支付。他们的雇员记录中有一个月薪字段。
3、同时，对于一些带薪的雇员，会根据他们的销售情况。支付给他们一定数量的酬金，他们会提交销售凭条，其中记录了销售的日期和数量。在他们的雇员记录中有一个酬金报酬字段，每隔一周的周五对他们进行支付。
4、雇员可以选择支付方式，可以选择把支票邮寄到他们指定的邮政地址；也可以把支票保存在出纳人员那里随之支取；或者要求将薪水直接存入他们指定的银行账户之中。
5、一些雇员会加入协会。在他们的雇员记录中有一个每周应付款项字段。这些应付款项必须要从他们的薪水中扣除。协会有时也会针对单个协会成员征收服务费用。协会每周会提交这些服务费用，服务费用必须要从相应雇员的下个月的薪水总额中扣除。
6、薪水支付程序每个工作日运行一次，并在当天未相应的雇员支付。系统会被告知雇员的支付日期，这样他会计算从雇员上次支付日期到规定的本次支付日期间应支付的数额。

抽象：本质部分的放大，无关紧要部分的去除。

客户为下次迭代选取的用户素材：
1、增加雇员
2、删除雇员
3、登记时间卡
4、登记销售凭条
5、更改雇员明细（例如：每小时报酬，会费）
6、在当日运行薪水支付系统

将用户素材转换为具有详细细节的用例
用例1  增加新雇员
————————————————————————————————————————————————————————————————————————————————————————
    使用AddEmp操作（transcation）可以增加新的雇员。该操作包含有雇员的名字、地址以及分配
的雇员号，该操作有三种形式：
AddEmp <EmpID> "<name>" "<address>" H <hourly-rate>
AddEmp <EmpID> "<name>" "<address>" S <monthly-salary>
AddEmp <EmpID> "<name>" "<address>" C <monthly-salary> <commission-rate>
    雇员记录是根据对应字段的值来创建的
异常情况1：描述操作的结构中有错误。
    如果描述操作的结构不正确，会在一条错误消息中把他们打印出来，并且不进行处理
————————————————————————————————————————————————————————————————————————————————————————
用例1中隐含着一个抽象。虽然AddEmp操作有三个形式，但是这3中形式中共享<EmpID> "<name>" "<address>"字段。我们可以用COMMAND模式创建一个具有三个派生类的抽象基类
AddEmpeeTransaction,这三个派生类是：AddHourlyEmployee-Transaction,AddSalariedEmployeeTransaction和AddCommissionedEmployeeTransaction.





